/*
Copyright {{ .Year }} The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

// {{ .Kind }}ResourceSpec contains the desired state of the resource.
type {{ .Kind }}ResourceSpec struct {
	// name will be the name of the created resource. If not specified, the
	// name of the ORC object will be used.
	// +optional
	Name *OpenStackName `json:"name,omitempty"`

	// description is a human-readable description for the resource.
	// +kubebuilder:validation:MinLength:=1
	// +kubebuilder:validation:MaxLength:=255
	// +optional
	Description *string `json:"description,omitempty"`
{{- range .RequiredCreateDependencies }}

	// {{ . | camelCase }}Ref is a reference to the ORC {{ . }} which this resource is associated with.
	// +required
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="{{ . | camelCase }}Ref is immutable"
	{{ . }}Ref KubernetesNameRef `json:"{{ . | camelCase }}Ref,omitempty"`
{{- end }}
{{- range .OptionalCreateDependencies }}

	// {{ . | camelCase }}Ref is a reference to the ORC {{ . }} which this resource is associated with.
	// +optional
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="{{ . | camelCase }}Ref is immutable"
	{{ . }}Ref *KubernetesNameRef `json:"{{ . | camelCase }}Ref,omitempty"`
{{- end }}

	// TODO(scaffolding): Add more types.
	// To see what is supported, you can take inspiration from the CreateOpts structure from
	// {{ .GophercloudModule }}
	//
	// Until you have implemented mutability for the field, you must add a CEL validation
	// preventing the field being modified:
	// `// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="<fieldname> is immutable"`
}

// {{ .Kind }}Filter defines an existing resource by its properties
// +kubebuilder:validation:MinProperties:=1
type {{ .Kind }}Filter struct {
	// name of the existing resource
	// +optional
	Name *OpenStackName `json:"name,omitempty"`

	// description of the existing resource
	// +kubebuilder:validation:MinLength:=1
	// +kubebuilder:validation:MaxLength:=255
	// +optional
	Description *string `json:"description,omitempty"`
{{- range .ImportDependencies }}

	// {{ . | camelCase }}Ref is a reference to the ORC {{ . }} which this resource is associated with.
	// +optional
	{{ . }}Ref *KubernetesNameRef `json:"{{ . | camelCase }}Ref,omitempty"`
{{- end }}

	// TODO(scaffolding): Add more types.
	// To see what is supported, you can take inspiration from the ListOpts structure from
	// {{ .GophercloudModule }}
}

// {{ .Kind }}ResourceStatus represents the observed state of the resource.
type {{ .Kind }}ResourceStatus struct {
	// name is a Human-readable name for the resource. Might not be unique.
	// +kubebuilder:validation:MaxLength=1024
	// +optional
	Name string `json:"name,omitempty"`

	// description is a human-readable description for the resource.
	// +kubebuilder:validation:MaxLength=1024
	// +optional
	Description string `json:"description,omitempty"`
{{- range .AllCreateDependencies }}

	// {{ . | camelCase }}ID is the ID of the {{ . }} to which the resource is associated.
	// +kubebuilder:validation:MaxLength=1024
	// +optional
	{{ . }}ID string `json:"{{ . | camelCase }}ID,omitempty"`
{{- end }}

	// TODO(scaffolding): Add more types.
	// To see what is supported, you can take inspiration from the {{ .GophercloudType }} structure from
	// {{ .GophercloudModule }}
}
