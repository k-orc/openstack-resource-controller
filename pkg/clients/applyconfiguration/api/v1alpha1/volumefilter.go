/*
Copyright 2025 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/k-orc/openstack-resource-controller/v2/api/v1alpha1"
)

// VolumeFilterApplyConfiguration represents a declarative configuration of the VolumeFilter type for use
// with apply.
type VolumeFilterApplyConfiguration struct {
	Name        *apiv1alpha1.OpenStackName `json:"name,omitempty"`
	Description *string                    `json:"description,omitempty"`
	Size        *int32                     `json:"size,omitempty"`
}

// VolumeFilterApplyConfiguration constructs a declarative configuration of the VolumeFilter type for use with
// apply.
func VolumeFilter() *VolumeFilterApplyConfiguration {
	return &VolumeFilterApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *VolumeFilterApplyConfiguration) WithName(value apiv1alpha1.OpenStackName) *VolumeFilterApplyConfiguration {
	b.Name = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *VolumeFilterApplyConfiguration) WithDescription(value string) *VolumeFilterApplyConfiguration {
	b.Description = &value
	return b
}

// WithSize sets the Size field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Size field is set to the value of the last call.
func (b *VolumeFilterApplyConfiguration) WithSize(value int32) *VolumeFilterApplyConfiguration {
	b.Size = &value
	return b
}
