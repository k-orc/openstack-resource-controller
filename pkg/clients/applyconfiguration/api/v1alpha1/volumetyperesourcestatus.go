/*
Copyright 2025 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// VolumeTypeResourceStatusApplyConfiguration represents a declarative configuration of the VolumeTypeResourceStatus type for use
// with apply.
type VolumeTypeResourceStatusApplyConfiguration struct {
	Name        *string           `json:"name,omitempty"`
	Description *string           `json:"description,omitempty"`
	ExtraSpecs  map[string]string `json:"extraSpecs,omitempty"`
	IsPublic    *bool             `json:"isPublic,omitempty"`
}

// VolumeTypeResourceStatusApplyConfiguration constructs a declarative configuration of the VolumeTypeResourceStatus type for use with
// apply.
func VolumeTypeResourceStatus() *VolumeTypeResourceStatusApplyConfiguration {
	return &VolumeTypeResourceStatusApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *VolumeTypeResourceStatusApplyConfiguration) WithName(value string) *VolumeTypeResourceStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *VolumeTypeResourceStatusApplyConfiguration) WithDescription(value string) *VolumeTypeResourceStatusApplyConfiguration {
	b.Description = &value
	return b
}

// WithExtraSpecs puts the entries into the ExtraSpecs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the ExtraSpecs field,
// overwriting an existing map entries in ExtraSpecs field with the same key.
func (b *VolumeTypeResourceStatusApplyConfiguration) WithExtraSpecs(entries map[string]string) *VolumeTypeResourceStatusApplyConfiguration {
	if b.ExtraSpecs == nil && len(entries) > 0 {
		b.ExtraSpecs = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.ExtraSpecs[k] = v
	}
	return b
}

// WithIsPublic sets the IsPublic field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IsPublic field is set to the value of the last call.
func (b *VolumeTypeResourceStatusApplyConfiguration) WithIsPublic(value bool) *VolumeTypeResourceStatusApplyConfiguration {
	b.IsPublic = &value
	return b
}
