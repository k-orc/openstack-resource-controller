/*
Copyright 2025 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/k-orc/openstack-resource-controller/v2/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SubnetLister helps list Subnets.
// All objects returned here must be treated as read-only.
type SubnetLister interface {
	// List lists all Subnets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Subnet, err error)
	// Subnets returns an object that can list and get Subnets.
	Subnets(namespace string) SubnetNamespaceLister
	SubnetListerExpansion
}

// subnetLister implements the SubnetLister interface.
type subnetLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Subnet]
}

// NewSubnetLister returns a new SubnetLister.
func NewSubnetLister(indexer cache.Indexer) SubnetLister {
	return &subnetLister{listers.New[*apiv1alpha1.Subnet](indexer, apiv1alpha1.Resource("subnet"))}
}

// Subnets returns an object that can list and get Subnets.
func (s *subnetLister) Subnets(namespace string) SubnetNamespaceLister {
	return subnetNamespaceLister{listers.NewNamespaced[*apiv1alpha1.Subnet](s.ResourceIndexer, namespace)}
}

// SubnetNamespaceLister helps list and get Subnets.
// All objects returned here must be treated as read-only.
type SubnetNamespaceLister interface {
	// List lists all Subnets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Subnet, err error)
	// Get retrieves the Subnet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.Subnet, error)
	SubnetNamespaceListerExpansion
}

// subnetNamespaceLister implements the SubnetNamespaceLister
// interface.
type subnetNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Subnet]
}
