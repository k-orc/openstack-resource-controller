/*
Copyright 2025 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/k-orc/openstack-resource-controller/v2/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// FlavorLister helps list Flavors.
// All objects returned here must be treated as read-only.
type FlavorLister interface {
	// List lists all Flavors in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Flavor, err error)
	// Flavors returns an object that can list and get Flavors.
	Flavors(namespace string) FlavorNamespaceLister
	FlavorListerExpansion
}

// flavorLister implements the FlavorLister interface.
type flavorLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Flavor]
}

// NewFlavorLister returns a new FlavorLister.
func NewFlavorLister(indexer cache.Indexer) FlavorLister {
	return &flavorLister{listers.New[*apiv1alpha1.Flavor](indexer, apiv1alpha1.Resource("flavor"))}
}

// Flavors returns an object that can list and get Flavors.
func (s *flavorLister) Flavors(namespace string) FlavorNamespaceLister {
	return flavorNamespaceLister{listers.NewNamespaced[*apiv1alpha1.Flavor](s.ResourceIndexer, namespace)}
}

// FlavorNamespaceLister helps list and get Flavors.
// All objects returned here must be treated as read-only.
type FlavorNamespaceLister interface {
	// List lists all Flavors in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Flavor, err error)
	// Get retrieves the Flavor from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.Flavor, error)
	FlavorNamespaceListerExpansion
}

// flavorNamespaceLister implements the FlavorNamespaceLister
// interface.
type flavorNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Flavor]
}
