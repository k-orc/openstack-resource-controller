/*
Copyright 2025 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "github.com/k-orc/openstack-resource-controller/v2/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ProjectLister helps list Projects.
// All objects returned here must be treated as read-only.
type ProjectLister interface {
	// List lists all Projects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Project, err error)
	// Projects returns an object that can list and get Projects.
	Projects(namespace string) ProjectNamespaceLister
	ProjectListerExpansion
}

// projectLister implements the ProjectLister interface.
type projectLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Project]
}

// NewProjectLister returns a new ProjectLister.
func NewProjectLister(indexer cache.Indexer) ProjectLister {
	return &projectLister{listers.New[*apiv1alpha1.Project](indexer, apiv1alpha1.Resource("project"))}
}

// Projects returns an object that can list and get Projects.
func (s *projectLister) Projects(namespace string) ProjectNamespaceLister {
	return projectNamespaceLister{listers.NewNamespaced[*apiv1alpha1.Project](s.ResourceIndexer, namespace)}
}

// ProjectNamespaceLister helps list and get Projects.
// All objects returned here must be treated as read-only.
type ProjectNamespaceLister interface {
	// List lists all Projects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Project, err error)
	// Get retrieves the Project from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.Project, error)
	ProjectNamespaceListerExpansion
}

// projectNamespaceLister implements the ProjectNamespaceLister
// interface.
type projectNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Project]
}
